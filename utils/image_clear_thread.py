import os
import time
from threading import Thread, Semaphore

from django.conf import settings

from utils.check_runserver import is_runserver

from utils.logutils import get_logger
logger = get_logger(__file__)


class ImageClearThread(Thread):
    """
    This is to clear temporary images generated by getting realtime images
    """
    def __init__(self):
        super(ImageClearThread, self).__init__(target=self.loop)
        self.images = set()
        self.semaphore = Semaphore()

    def put_image(self, image, time_to_clear=300):
        if image:
            with self.semaphore:
                self.images.add((image, time_to_clear, time.time()))

    def loop(self):
        while True:
            time.sleep(60)
            with self.semaphore:
                deleted = []
                for item in self.images:
                    if time.time() - item[2] >= item[1]:
                        filepath = settings.ALERT_IMAGE_DIR.joinpath(item[0])
                        logger.info(f'Removing image {filepath}')
                        try:
                            os.remove(filepath)
                        except Exception as e:
                            logger.info(f'Fail to delete image file: {filepath}')
                        deleted.append(item)
                for item in deleted:
                    self.images.remove(item)


if is_runserver():
    logger.info('ImageClearThread Inited')
    image_clear_thread = ImageClearThread()
    image_clear_thread.start()
else:
    image_clear_thread = None
